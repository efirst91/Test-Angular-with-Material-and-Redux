import {Component, Inject, OnInit} from '@angular/core';
import {MAT_DIALOG_DATA, MatDialogRef} from "@angular/material/dialog";
import {FormBuilder, FormGroup} from "@angular/forms";
import {ActionsTable} from "../../../core/utils/enums/enums";
import {v4 as uuidv4} from 'uuid';
import {ActionFunction, DialogDataCustom} from "../../../core/interfaces/actions-functions";

@Component({
  selector: 'app-edit',
  templateUrl: './edit.component.html',
  styleUrls: ['./edit.component.scss']
})
export class EditComponent implements OnInit {

  constructor(
    private _dialogRef: MatDialogRef<EditComponent>,
    private _fb: FormBuilder,
    @Inject(MAT_DIALOG_DATA) public data: DialogDataCustom,
  ) {
    this.createFunctions();
  }

  private actionFunction!: ActionFunction;
  public formProduct!: FormGroup;

  /**
   * Create action functions to be executed
   * @private
   */
  private createFunctions(): void {
    this.actionFunction = {
      New: () => {
      },
      Edit: () => this.validateModify(),
      See: () => this.validateSee(),
      Delete: () => {
      },
    }
  }

  /**
   * Validate form when action is modify
   * @private
   */
  private validateModify(): void {
    this.formProduct.patchValue({
      name: this.data.row?.name,
      price: this.data.row?.price,
      serial_number: this.data.row?.serial_number
    })
  }

  /**
   * Validate form when action is see
   * @private
   */
  private validateSee(): void {
    this.formProduct.disabled;
  }

  /**
   * Create forms controls
   * @private
   */
  private createForm(): void {
    this.formProduct = this._fb.group({
      id: [''],
      name: [''],
      price: [''],
      serial_number: ['']
    })
  }


  /**
   * Pass the form data to the function passed by reference
   * @description If type is modify then, id = selected row, else the id was generated by uuidv4 helper
   * @see CrudComponent
   * @see createFunctions
   */
  public onAccept(): void {
    if (this.data.type !== ActionsTable.DELETE) {
      const uid = this.data.type === ActionsTable.EDIT ? this.data.row?.id : uuidv4();
      this.formProduct.get('id')?.setValue(uid);
      this.data.fn(this.formProduct.value, this.formProduct.valid);

    } else {
      this.data.fn('ok', true);
    }
    this.onClose();
  }

  /**
   * Close dialog
   */
  public onClose(): void {
    this._dialogRef.close();
  }

  ngOnInit(): void {
    this.createForm();
    this.actionFunction[this.data.type]();
  }

}
